<?php

namespace Sandbox\ApiBundle\Repository\Shop;

use Doctrine\ORM\EntityRepository;
use Sandbox\ApiBundle\Entity\Shop\Shop;

/**
 * ShopOrderProductRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ShopOrderProductRepository extends EntityRepository
{
    /**
     * get unpaid shop orders.
     */
    public function getShopOrderProductInventory(
        $orderId
    ) {
        $query = $this->createQueryBuilder('op')
            ->select('psi as item, psi.inventory as inventory, opsi.amount as amount')
            ->Join('SandboxApiBundle:Shop\ShopOrderProductSpec', 'ops', 'WITH', 'ops.productId = op.id')
            ->Join('SandboxApiBundle:Shop\ShopOrderProductSpecItem', 'opsi', 'WITH', 'opsi.specId = ops.id')
            ->Join('SandboxApiBundle:Shop\ShopProduct', 'p', 'WITH', 'p.id = op.productId')
            ->Join('SandboxApiBundle:Shop\ShopProductSpec', 'ps', 'WITH', 'ps.id = ops.specId')
            ->Join('SandboxApiBundle:Shop\ShopProductSpecItem', 'psi', 'WITH', 'psi.id = opsi.itemId')
            ->Join('SandboxApiBundle:Shop\ShopSpec', 's', 'WITH', 's.id = ps.shopSpecId')
            ->where('op.orderId = :orderId')
            ->andWhere('s.inventory = :inventory')
            ->setParameter('inventory', true)
            ->setParameter('orderId', $orderId)
            ->getQuery();

        return $query->getResult();
    }
}
